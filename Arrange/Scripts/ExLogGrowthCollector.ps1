#################################################################################
# 
# The sample scripts are not supported under any Microsoft standard support 
# program or service. The sample scripts are provided AS IS without warranty 
# of any kind. Microsoft further disclaims all implied warranties including, without 
# limitation, any implied warranties of merchantability or of fitness for a particular 
# purpose. The entire risk arising out of the use or performance of the sample scripts 
# and documentation remains with you. In no event shall Microsoft, its authors, or 
# anyone else involved in the creation, production, or delivery of the scripts be liable 
# for any damages whatsoever (including, without limitation, damages for loss of business 
# profits, business interruption, loss of business information, or other pecuniary loss) 
# arising out of the use of or inability to use the sample scripts or documentation, 
# even if Microsoft has been advised of the possibility of such damages
#
#################################################################################


#Generated Form Function

function CollectLogs{

Write-Host "Querying Message Tracking data for mail sent to/from server " -nonewline -fore Cyan; Write-Host $txtServerName.text -fore yellow
Write-Host
$fqdn = $(get-exchangeserver -ev err -ea SilentlyContinue $txtServerName.text).fqdn

# Error Handling
if ($err) {
	Write-Host $err -fore red
	Write-Host
	return
	}

Get-ExchangeServer -ev err -ea SilentlyContinue | where {$_.IsHubTransportServer -eq "True" -or $_.name -eq $txtServerName.text} | Get-MessageTrackingLog -ResultSize Unlimited -Start $txtStartTime.Text -End $txtEndTime.Text -ev err -ea SilentlyContinue | where {$_.ServerHostname -eq $txtServerName.text -or $_.clienthostname -eq $txtServerName.text -or $_.clienthostname -eq $fqdn} | sort-object totalbytes -Descending | export-csv MsgTrack.csv -NoType

if ($err) {
	Write-Host $err -fore red
	Write-Host
	return
	} else {
	Write-Host "Successfully Exported Message Tracking Data to MsgTrack.csv file..." -fore green
	Write-Host 
	}

}

function GenerateForm {
########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.4.0
# Generated On: 7/10/2009 10:46 PM
# Generated By: mikelag
########################################################################

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$btnCancel = New-Object System.Windows.Forms.Button
$btnCollect = New-Object System.Windows.Forms.Button
$grpStartEnd = New-Object System.Windows.Forms.GroupBox
$txtEndTime = New-Object System.Windows.Forms.TextBox
$lblStartTime = New-Object System.Windows.Forms.Label
$lblEndTime = New-Object System.Windows.Forms.Label
$txtStartTime = New-Object System.Windows.Forms.TextBox
$grpServerName = New-Object System.Windows.Forms.GroupBox
$blServerName = New-Object System.Windows.Forms.Label
$txtServerName = New-Object System.Windows.Forms.TextBox
$lblToolName = New-Object System.Windows.Forms.Label
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$btnCollect_OnClick= 
{
# Clear Screen
Clear-host

#Call CollectLogs Function
CollectLogs

#Close Form
$form1.DialogResult="OK"
$form1.close()
}

$btnCancel_OnClick= 
{
#Close Form when Cancel button selected
$form1.DialogResult="Cancel"
$form1.Close()
}

$handler_txtServerName_TextChanged= 
{
#TODO: Place custom script here

}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

# Date/Time Conversions
$HoursBack = -2
$CurrentTime = (get-date -Format g)
$SubtractTime = (get-date).Addhours($HoursBack)
$ConvertTime = "{0:g}" -f [DateTime]$SubTractTime

#----------------------------------------------
#region Generated Form Code
$form1.Text = "Exchange Server 2007/2010 Log Growth Message Tracking Collector"
$form1.Name = "form1"
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.FormBorderStyle = 3
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 484
$System_Drawing_Size.Height = 300
$form1.ClientSize = $System_Drawing_Size

$btnCancel.TabIndex = 10
$btnCancel.Name = "btnCancel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 75
$System_Drawing_Size.Height = 23
$btnCancel.Size = $System_Drawing_Size
$btnCancel.UseVisualStyleBackColor = $True

$btnCancel.Text = "Cancel"

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 312
$System_Drawing_Point.Y = 250
$btnCancel.Location = $System_Drawing_Point
$btnCancel.DataBindings.DefaultDataSourceUpdateMode = 0
$btnCancel.add_Click($btnCancel_OnClick)

$form1.Controls.Add($btnCancel)

$btnCollect.TabIndex = 9
$btnCollect.Name = "btnCollect"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 176
$System_Drawing_Size.Height = 23
$btnCollect.Size = $System_Drawing_Size
$btnCollect.UseVisualStyleBackColor = $True

$btnCollect.Text = "Collect Logs"

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 115
$System_Drawing_Point.Y = 250
$btnCollect.Location = $System_Drawing_Point
$btnCollect.DataBindings.DefaultDataSourceUpdateMode = 0
$btnCollect.add_Click($btnCollect_OnClick)

$form1.Controls.Add($btnCollect)

$grpStartEnd.Name = "grpStartEnd"

$grpStartEnd.Text = "Start/End Times"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 449
$System_Drawing_Size.Height = 93
$grpStartEnd.Size = $System_Drawing_Size
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 13
$System_Drawing_Point.Y = 132
$grpStartEnd.Location = $System_Drawing_Point
$grpStartEnd.TabStop = $False
$grpStartEnd.TabIndex = 8
$grpStartEnd.DataBindings.DefaultDataSourceUpdateMode = 0

$form1.Controls.Add($grpStartEnd)
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 119
$System_Drawing_Size.Height = 20
$txtEndTime.Size = $System_Drawing_Size
$txtEndTime.DataBindings.DefaultDataSourceUpdateMode = 0
$txtEndTime.Text = $CurrentTime
$txtEndTime.Name = "txtEndTime"
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 321
$System_Drawing_Point.Y = 61
$txtEndTime.Location = $System_Drawing_Point
$txtEndTime.TabIndex = 6

$grpStartEnd.Controls.Add($txtEndTime)

$lblStartTime.TabIndex = 2
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 306
$System_Drawing_Size.Height = 23
$lblStartTime.Size = $System_Drawing_Size
$lblStartTime.Text = "Enter Start Time in the format of MM/DD/YYYY hh:mm AM"

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 9
$System_Drawing_Point.Y = 28
$lblStartTime.Location = $System_Drawing_Point
$lblStartTime.DataBindings.DefaultDataSourceUpdateMode = 0
$lblStartTime.Name = "lblStartTime"

$grpStartEnd.Controls.Add($lblStartTime)

$lblEndTime.TabIndex = 3
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 306
$System_Drawing_Size.Height = 23
$lblEndTime.Size = $System_Drawing_Size
$lblEndTime.Text = "Enter End Time in the Format of MM/DD/YYYY hh:mm PM"

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 9
$System_Drawing_Point.Y = 64
$lblEndTime.Location = $System_Drawing_Point
$lblEndTime.DataBindings.DefaultDataSourceUpdateMode = 0
$lblEndTime.Name = "lblEndTime"

$grpStartEnd.Controls.Add($lblEndTime)

$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 119
$System_Drawing_Size.Height = 20
$txtStartTime.Size = $System_Drawing_Size
$txtStartTime.DataBindings.DefaultDataSourceUpdateMode = 0
$txtStartTime.Text = $ConvertTime
$txtStartTime.Name = "txtStartTime"
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 321
$System_Drawing_Point.Y = 25
$txtStartTime.Location = $System_Drawing_Point
$txtStartTime.TabIndex = 5

$grpStartEnd.Controls.Add($txtStartTime)


$grpServerName.Name = "grpServerName"

$grpServerName.Text = "Exchange Server Name"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 332
$System_Drawing_Size.Height = 63
$grpServerName.Size = $System_Drawing_Size
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 13
$System_Drawing_Point.Y = 63
$grpServerName.Location = $System_Drawing_Point
$grpServerName.TabStop = $False
$grpServerName.TabIndex = 7
$grpServerName.DataBindings.DefaultDataSourceUpdateMode = 0

$form1.Controls.Add($grpServerName)
$blServerName.TabIndex = 1
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 150
$System_Drawing_Size.Height = 23
$blServerName.Size = $System_Drawing_Size
$blServerName.Text = "Enter Mailbox Server Name :"

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 6
$System_Drawing_Point.Y = 26
$blServerName.Location = $System_Drawing_Point
$blServerName.DataBindings.DefaultDataSourceUpdateMode = 0
$blServerName.Name = "blServerName"

$grpServerName.Controls.Add($blServerName)

$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 153
$System_Drawing_Size.Height = 20
$txtServerName.Size = $System_Drawing_Size
$txtServerName.DataBindings.DefaultDataSourceUpdateMode = 0
$txtServerName.Name = "txtServerName"
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 162
$System_Drawing_Point.Y = 26
$txtServerName.Location = $System_Drawing_Point
$txtServerName.TabIndex = 4
$txtServerName.add_TextChanged($handler_txtServerName_TextChanged)

$grpServerName.Controls.Add($txtServerName)


$lblToolName.TabIndex = 0
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Width = 449
$System_Drawing_Size.Height = 23
$lblToolName.Size = $System_Drawing_Size
$lblToolName.Text = "Exchange Server 2007/2010 Log Growth Message Tracking Collector"
$lblToolName.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",9.75,1,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 13
$System_Drawing_Point.Y = 13
$lblToolName.Location = $System_Drawing_Point
$lblToolName.DataBindings.DefaultDataSourceUpdateMode = 0
$lblToolName.Name = "lblToolName"

$form1.Controls.Add($lblToolName)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm
